(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{481:function(t,s,a){t.exports=a.p+"assets/img/1645324507138.fc066af5.jpg"},533:function(t,s,a){t.exports=a.p+"assets/img/1645321528510.d9227b64.jpg"},534:function(t,s,a){t.exports=a.p+"assets/img/1645321836097.bdcb885d.jpg"},535:function(t,s,a){t.exports=a.p+"assets/img/1645322462186.8cb0a5d3.jpg"},536:function(t,s,a){t.exports=a.p+"assets/img/1645322768186.48577f9b.jpg"},537:function(t,s,a){t.exports=a.p+"assets/img/1645323427752.e25dcfb8.jpg"},538:function(t,s,a){t.exports=a.p+"assets/img/1645324060764.3d97034c.jpg"},539:function(t,s,a){t.exports=a.p+"assets/img/1645324924704.bcb18624.jpg"},540:function(t,s,a){t.exports=a.p+"assets/img/1645326234075.f1a4c3f1.jpg"},541:function(t,s,a){t.exports=a.p+"assets/img/1645327565128.50ff61e5.jpg"},542:function(t,s,a){t.exports=a.p+"assets/img/1645327840554.52977a4b.jpg"},543:function(t,s,a){t.exports=a.p+"assets/img/1645328759610.54998116.jpg"},544:function(t,s,a){t.exports=a.p+"assets/img/1645329101801.e49abc6e.jpg"},545:function(t,s,a){t.exports=a.p+"assets/img/1645330134734.f56452ed.jpg"},546:function(t,s,a){t.exports=a.p+"assets/img/1645330273553.03043469.jpg"},547:function(t,s,a){t.exports=a.p+"assets/img/1645330507471.8266d01a.jpg"},548:function(t,s,a){t.exports=a.p+"assets/img/1645330666412.f74679b4.jpg"},549:function(t,s,a){t.exports=a.p+"assets/img/1645331212297.d540ad71.jpg"},623:function(t,s,a){"use strict";a.r(s);var n=a(7),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("blockquote",[n("p",[t._v("点击勘误"),n("a",{attrs:{href:"https://github.com/webVueBlog/learn-web/issues",target:"_blank",rel:"noopener noreferrer"}},[t._v("issues"),n("OutboundLink")],1),t._v("，哪吒感谢大家的阅读")])]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#栈"}},[t._v("栈")])]),n("li",[n("a",{attrs:{href:"#队列"}},[t._v("队列")])]),n("li",[n("a",{attrs:{href:"#使用队列实现栈"}},[t._v("使用队列实现栈")])]),n("li",[n("a",{attrs:{href:"#包含min函数的栈"}},[t._v("包含min函数的栈")])]),n("li",[n("a",{attrs:{href:"#用另一个栈-存储各个状态最小值"}},[t._v("用另一个栈，存储各个状态最小值")])]),n("li",[n("a",{attrs:{href:"#合法的出栈序列"}},[t._v("合法的出栈序列")])])])]),n("p"),t._v(" "),n("ol",[n("li",[t._v("使用队列实现栈 （栈，队列）")]),t._v(" "),n("li",[t._v("使用栈实现队列 （栈，队列）")]),t._v(" "),n("li",[t._v("包含min函数的栈")]),t._v(" "),n("li",[t._v("合法的出栈序列")]),t._v(" "),n("li",[t._v("简单的计算器")]),t._v(" "),n("li",[t._v("寻找中位数")])]),t._v(" "),n("p",[t._v("栈，先进后出的线性表。")]),t._v(" "),n("ul",[n("li",[t._v("1，2，3 按顺序压入栈中（push操作） 栈")]),t._v(" "),n("li",[t._v("按照栈顶栈低3，2，1的顺序出栈（pop操作）")])]),t._v(" "),n("p",[t._v("队列，先进先出的线性表。")]),t._v(" "),n("ul",[n("li",[t._v("1，2，3按照顺序压入队列中（push操作）")]),t._v(" "),n("li",[t._v("按照队列头部到尾部1，2，3的顺序出队列（pop操作）")])]),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(533)}}),t._v(" "),n("h2",{attrs:{id:"栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#栈"}},[t._v("#")]),t._v(" 栈")]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("s"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 取出栈顶\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断栈是否为空\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 将x添加至栈\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 弹出栈顶\ns"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 栈的存储元素个数\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(534)}}),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("int "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("std")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("stack"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("int"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token constant"}},[t._v("S")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br")])]),n("h2",{attrs:{id:"队列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#队列"}},[t._v("#")]),t._v(" 队列")]),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(535)}}),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[t._v("q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 判断队列是否为空\nq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("front")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 返回队列头部元素\nq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("back")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 返回队列尾部元素\nq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 弹出队列头部元素\nq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 将x添加至队列\nq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("size")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 返回队列的存储元素的个数\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br")])]),n("h2",{attrs:{id:"使用队列实现栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用队列实现栈"}},[t._v("#")]),t._v(" 使用队列实现栈")]),t._v(" "),n("p",[t._v("设计一个栈，支持基本的栈操作，这个栈的内部存储数据的结构为队列，队列的方法只能包含push,peek(front),pop,size,empty等标准的队列方法")]),t._v(" "),n("ol",[n("li",[t._v("push(x): 将元素x压入栈中")]),t._v(" "),n("li",[t._v("pop(): 弹出（移除）栈顶元素")]),t._v(" "),n("li",[t._v("top(): 返回栈顶元素")]),t._v(" "),n("li",[t._v("empty(): 判断栈是否是空")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyStack")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MyStack")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("int x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  int "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  int "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  bool "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nj"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(536)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(537)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(538)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(481)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(481)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(539)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(540)}}),t._v(" "),n("h2",{attrs:{id:"包含min函数的栈"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#包含min函数的栈"}},[t._v("#")]),t._v(" 包含min函数的栈")]),t._v(" "),n("p",[t._v("设计一个栈，支持如下操作，这些操作的算法复杂度需要是常数级：")]),t._v(" "),n("ol",[n("li",[t._v("push(x): 将元素x压入栈中")]),t._v(" "),n("li",[t._v("pop(): 弹出（移除）栈顶元素")]),t._v(" "),n("li",[t._v("top(): 返回栈顶元素")]),t._v(" "),n("li",[t._v("getMin(): 返回栈内最小元素")])]),t._v(" "),n("div",{staticClass:"language-js line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MinStack")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("MinStack")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("int x")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  int "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("top")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  int "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("getMin")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br")])]),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(541)}}),t._v(" "),n("h2",{attrs:{id:"用另一个栈-存储各个状态最小值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#用另一个栈-存储各个状态最小值"}},[t._v("#")]),t._v(" 用另一个栈，存储各个状态最小值")]),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(542)}}),t._v(" "),n("h2",{attrs:{id:"合法的出栈序列"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#合法的出栈序列"}},[t._v("#")]),t._v(" 合法的出栈序列")]),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(543)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(544)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(545)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(546)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(547)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(548)}}),t._v(" "),n("img",{staticStyle:{display:"flex",margin:"auto",width:"100%"},attrs:{src:a(549)}})])}),[],!1,null,null,null);s.default=e.exports}}]);