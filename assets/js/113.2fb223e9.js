(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{700:function(e,l,o){"use strict";o.r(l);var t=o(7),i=Object(t.a)({},(function(){var e=this,l=e.$createElement,o=e._self._c||l;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("blockquote",[o("p",[e._v("点击勘误"),o("a",{attrs:{href:"https://github.com/webVueBlog/learn-web/issues",target:"_blank",rel:"noopener noreferrer"}},[e._v("issues"),o("OutboundLink")],1),e._v("，哪吒感谢大家的阅读")])]),e._v(" "),o("p"),o("div",{staticClass:"table-of-contents"},[o("ul")]),o("p"),e._v(" "),o("ul",[o("li",[e._v("MVVM 是 Model-View-ViewModel 的缩写")]),e._v(" "),o("li",[e._v("Model: 代表数据模型，也可以在 Model 中定义数据修改和操作的业务逻辑。我们可以把 Model 称为数据层，因为它仅仅关注数据本身，不关心任何行为")]),e._v(" "),o("li",[e._v("View: 用户操作界面。当 ViewModel 对 Model 进行更新的时候，会通过数据绑定更新到 View")]),e._v(" "),o("li",[e._v("ViewModel： 业务逻辑层，View 需要什么数据，ViewModel 要提供这个数据；View 有某些操作，ViewModel 就要响应这些操作，所以可以说它是 Model for View.")])]),e._v(" "),o("p",[e._v("总结：")]),e._v(" "),o("ul",[o("li",[e._v("MVVM 模式简化了界面与业务的依赖，解决了数据频繁更新。")]),e._v(" "),o("li",[e._v("MVVM 在使用当中，利用双向绑定技术，使得 Model 变化时，ViewModel 会自动更新，而 ViewModel 变化时，View 也会自动变化。")])])])}),[],!1,null,null,null);l.default=i.exports}}]);